version: '3'
services:
  web:
    build: .
    container_name: offers_collector_web
    restart: unless-stopped
    command: python app.py
    ports:
      - "18831:18832"
    environment:
      - POSTGRES_DB=${POSTGRES_DB-offers_collector}
      - POSTGRES_USER=${POSTGRES_USER-collector}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - DB_PORT=${DB_PORT-5432}
      - DB_HOST=${DB_HOST-db}
    env_file:
      - .env
  collector:
    build: .
    container_name: offers_collector
    restart: unless-stopped
    command: python collector.py
    environment:
      - POSTGRES_DB=${POSTGRES_DB-offers_collector}
      - POSTGRES_USER=${POSTGRES_USER-collector}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - DB_PORT=${DB_PORT-5432}
      - DB_HOST=${DB_HOST-db}
    env_file:
      - .env
  db:
    image: postgres:14-alpine
    container_name: offers_collector_db
    restart: unless-stopped
    ports:
      - "${DB_PORT-6666}:${DB_PORT-6666}"
    environment:
      - POSTGRES_DB=${POSTGRES_DB-offers_collector}
      - POSTGRES_USER=${POSTGRES_USER-collector}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    command: -p ${DB_PORT-6666}
    env_file:
      - .env
  adminer:
    image: michalhosna/adminer
    container_name: offers_collector_adminer
    restart: unless-stopped
    ports:
      - "8080:8080"
    env_file:
      - .env
    environment:
      ADMINER_SERVER: "db:${DB_PORT-6666}"
      ADMINER_USERNAME: ${POSTGRES_USER-collector}
      ADMINER_PASSWORD: ${POSTGRES_PASSWORD}
      ADMINER_DRIVER: pgsql
      ADMINER_DB: ${POSTGRES_DB-offers_collector}
      ADMINER_AUTOLOGIN: 1




